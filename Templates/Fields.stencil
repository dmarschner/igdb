{% for type in types.all.implementing.AutoComposable|struct %}
// sourcery:file:{{ type.name}}+Fields.gen.swift
import Foundation

extension {{ type.name }}: Composable {

    /// A type that can be used for expressing required fields
    {{ type.accessLevel }} enum Fields: String, Field {
        {% for variable in type.storedVariables %}
        {% set CamelCased %}{{ variable.name | camelToSnakeCase }}{% endset %}
        {% if variable.name != "identifier" %}{# Identifier is skipped on fields #}
        {% if variable.annotations.key %}
        case {{ variable.name }} = "{{ variable.annotations.key }}"
        {% elif variable.name != CamelCased %}
        case {{ variable.name }} = "{{ CamelCased }}"
        {% else %}
        case {{ variable.name }}
        {% endif %}
        {% endif %}{# Identifier skip #}
        {% endfor %}
    }
}
// sourcery:end
{% endfor %}
